@using Dentist.Enums
@using Dentist.Models
@model Dentist.ViewModels.AppointmentView

<script>
    function filterDoctorIdBy() {
        return { personRole: 1 }
    }
</script>
           
<fieldset class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="editor-label">
        @Html.LabelFor(model => model.DoctorId, new { @class = "control-label" })
    </div>
    <div class="editor-field">
        @(Html.Kendo().DropDownList()
              .Name("DoctorId")
              .OptionLabel("--Select--")
              .HtmlAttributes(new { style = "width: 100%" })
              .DataTextField("Text")
              .DataValueField("Id")              
              .DataSource(source => source.Read(read => read.Action("GetAllIdTexts", "People").Data("filterDoctorIdBy")))
              )
        @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.PatientId, new { @class = "control-label" })
    </div>
    <div class="editor-field">
        @(Html.Kendo().DropDownList()
              .Name("PatientId")
              .OptionLabel("--Select--")
              .HtmlAttributes(new { style = "width: 100%" })
              .DataTextField("Text")
              .DataValueField("Id")
              .DataSource(source => source.Read(read => read.Action("GetAllIdTexts", "People")))
              )
        @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="editor-field">
        @Html.Kendo().DateTimePickerFor(model => model.StartDateTime)
        @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="editor-field">
        @Html.Kendo().DateTimePickerFor(model => model.EndDateTime)
        @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.AppointmentStatus, new { @class = "control-label" })
    </div>
    <div class="editor-field">
        @(Html.Kendo().DropDownList()
              .Name("AppointmentStatus")
              .OptionLabel("--Select--")
              .HtmlAttributes(new { style = "width: 100%" })
              .BindTo(EnumHelper.GetSelectList(typeof(AppointmentStatus)))
              
              )
        @Html.ValidationMessageFor(model => model.AppointmentStatus, "", new { @class = "text-danger" })
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

</fieldset>

