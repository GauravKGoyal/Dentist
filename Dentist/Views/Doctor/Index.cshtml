@using System.Web.UI.WebControls
@using Dentist.Enums
@using Dentist.ViewModels

@{
    ViewBag.Title = "Doctor Browser";
    var pageSizeArray = new[] {20, 50, 100};
}

<script src="~/Scripts/gridHelper.js"></script>

@(Html.Kendo().Grid<DoctorListViewModel>().Name("grdDoctor")
          .DataSource(dataSource => dataSource.Ajax().Model(model => model.Id(x => x.Id))
              .PageSize(pageSizeArray[0])
              .Sort(sort =>
              {
                  sort.Add(x => x.FirstName).Ascending();
              })
             .Read(read => read.Action("GetBrowserItems", "Doctor"))
          )
          .Columns(columns =>
          {
              //columns.Bound(x => x.Id).Title("Picture").Width(140);
              columns.Bound(x => x.FirstName).Title("Detail").ClientTemplate(
             "<table>"+
               "<tr data-uid='#: data.Id #'>" +
                 "<td style=width:140px>" +
                       "#if (data.AvatarId == 0){# " +
                            "<img width=140px src='" + Url.Content("~/Content/Images/user.png") +"' alt='#: data.AvatarId #' />" +
                       "#}else{#"+
                            "<img width=140px src='" + Url.Content("~/File/Get?id=") + "#:data.AvatarId#' alt='#: data.AvatarId #' />" +
                       "#}#"+
                 "</td>" +
                 "<td style='padding-top:0' >" +
                    "<h3 style='margin-top:0'><a href=/Doctor/Edit/#:id#>Dr #: FirstName # #: LastName #</a></h3>" +
                    "<div>#:QualificationsName# </div>" +
                    "<div>#:ExperienceInYears# years Experience</div>" +
                    "<div>#:About#</div>" +
                 "</td>" +
               "</tr>"+
             "</table>"
                  );
              columns.Command(
                  command =>
                  {
                      //command.Custom("Edit").Click("grdDoctor_onEdit").Text("Edit");
                      command.Custom("Delete").Click("grdDoctor_onDelete").Text("Delete");
                  }).Width(100);

          })
          //.ClientRowTemplate(
          //  "<tr data-uid='#: data.Id #'>" +
          //      "<td class='photo'>" +
          //             "<img src='" + Url.Content("~/File/Get?id=") + "#:data.AvatarId#' alt='#: data.AvatarId #' />" +
          //      "</td>" +
          //      "<td class='details'>" +
          //          "<a href=/Doctor/Edit/#:id#><h2 class='title'>Dr #: FirstName # #: LastName #</h2></a>" +
          //          "<span class='title'>Experience: 15 Years</span>" +
          //      "</td>" +
          //   "</tr>"
          //)
          .Resizable(resizable => resizable.Columns(true))
              .ToolBar(toolbar => { toolbar.Custom().Name("Create").Action("Create", "Doctor"); })
              .Events(e => e.DataBound("grd_onDataBound"))
          .Pageable(pager =>
          {
              pager.PageSizes(pageSizeArray);
              pager.Refresh(true);
          })     
          .Sortable()          
          .Scrollable(s => s.Height("auto"))
          .Filterable()              
)


<script>
    function grdDoctor_onEdit(e) {
        e.preventDefault();
        EditGridRow(e, $("#grdDoctor"), '@Url.Action("Edit", "Doctor")');
    }

    function grdDoctor_onDelete(e) {
        e.preventDefault();
        DeleteGridRow(e, $("#grdDoctor"), '@Url.Action("Delete", "Doctor")');
    }
</script>