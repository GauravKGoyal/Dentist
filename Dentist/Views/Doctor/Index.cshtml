@using Dentist.Enums
@using Dentist.ViewModels

@{
    ViewBag.Title = "Doctor Browser";
    var pageSizeArray = new[] {20, 50, 100};
}

<script src="~/Scripts/gridHelper.js"></script>

@(Html.Kendo().Grid<DoctorListViewModel>().Name("grdDoctor")
          .DataSource(dataSource => dataSource.Ajax().Model(model => model.Id(x => x.Id))
              .PageSize(pageSizeArray[0])
              .Sort(sort =>
              {
                  sort.Add(x => x.FirstName).Ascending();
              })
             .Read(read => read.Action("GetBrowserItems", "Doctor"))
          )
          .Columns(columns =>
          {
              columns.Bound(x => x.Id).Width("5%");
              columns.Bound(x => x.FirstName);
              columns.Bound(x => x.LastName);
              columns.Bound(x => x.Email);
              columns.Bound(x => x.Phone);
              columns.Command(
                  command =>
                  {
                      command.Custom("Edit").Click("grdDoctor_onEdit").Text("Edit");
                      command.Custom("Delete").Click("grdDoctor_onDelete").Text("Delete");
                  }).Width("16%");

          })
          .Resizable(resizable => resizable.Columns(true))
              .ToolBar(toolbar => { toolbar.Custom().Name("Create").Action("Create", "Doctor"); })
              .Events(e => e.DataBound("grd_onDataBound"))
          .Pageable(pager =>
          {
              pager.PageSizes(pageSizeArray);
              pager.Refresh(true);
          })     
          .Sortable()          
          .Scrollable(s => s.Height("auto"))
          .Filterable()              
)


<script>
    function grdDoctor_onEdit(e) {
        e.preventDefault();
        EditGridRow(e, $("#grdDoctor"), '@Url.Action("Edit", "Doctor")');
    }

    function grdDoctor_onDelete(e) {
        e.preventDefault();
        DeleteGridRow(e, $("#grdDoctor"), '@Url.Action("Delete", "Doctor")');
    }
</script>