@model Dentist.ViewModels.PracticeViewModel

@{
    var isCreate = Model == null || Model.Id == 0;
    ViewBag.Title = isCreate ? "Create Practice" : "Edit Practice- " + Model.Name;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.AddressId)
        @Html.HiddenFor(model => model.Address.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.PracticeTagline, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.PracticeTagline, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PracticeTagline, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.AddressLine1, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Address.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.AddressLine1, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Address.Suburb, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Address.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.Suburb, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @(Html.Kendo().ColorPickerFor(model => model.Color)
                .Palette(ColorPickerPalette.WebSafe))
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12" style="text-align:right">
            <hr>
            <button class="btn btn-primary" value="Save" type="submit" name="btnSubmit"><span class="k-icon k-update"></span> Save</button>
            <button class="btn btn-default" value="Save and Close" type="submit" name="btnSubmit"><span class="k-icon k-update"></span> Save and Close</button>
            <a href="@Url.Action("Index", "Practice")" class="btn btn-default"><span class="k-icon k-cancel"></span> Close</a>
        </div>
    </div>
}

<script>
    $(function () {
        window.grdAppointmentLoaded = false;
        window.grdAvailabilityLoaded = false;
    });

    $("#tabAppointments").on("click", function () {       
        if (!window.grdAppointmentLoaded) {
            $('#grdAppointment').data('kendoGrid').dataSource.read();
            window.grdAppointmentLoaded = true;
        }
    });

    $("#tabAvailability").on("click", function () {
        if (!window.grdAvailabilityLoaded) {
            $('#grdDailyAvailability').data('kendoGrid').dataSource.read();
            window.grdAvailabilityLoaded = true;
        }
    });

</script>
